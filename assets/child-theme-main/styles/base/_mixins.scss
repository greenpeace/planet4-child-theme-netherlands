@use "variables";

// Mobile-only (up to 576px)
@mixin mobile-only {
  @media (max-width: #{variables.$small-width}) {
    @content;
  }
}

// Mobile & Up (greater than to 576px)
@mixin small-and-up {
  @media (min-width: #{variables.$small-width}) {
    @content;
  }
}

// Tablet & Up (greater than 768px)
@mixin medium-and-up {
  @media (min-width: #{variables.$medium-width}) {
    @content;
  }
}

// Large Tablet & Up (greater than 992px)
@mixin large-and-up {
  @media (min-width: #{variables.$large-width}) {
    @content;
  }
}

// Large Desktop & Up (greater than 1200px)
@mixin x-large-and-up {
  @media (min-width: #{variables.$extra-large-width}) {
    @content;
  }
}

// Margins and padding. Use to consistently apply gutters
// use like this: @include padding($left: $n15, $right: $n15); wich will be compiled as padding-left: 15px; padding-right: 15px;

// To use as negative numbers interpolate these as follows...
// @include margin($top: -#{$n10}, $right: $n20, $bottom: $n10, $left: 0); which will be compiled as margin: -10, 20px 10px 0px;

@mixin padding($top: null, $right: null, $bottom: null, $left: null) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

@mixin margin($top: null, $right: null, $bottom: null, $left: null) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

// Usage: @include transition(all 0.2s ease-in-out);
@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes: ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

// Cause an element to match the size of its stacking context parent.
@mixin fill-container() {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin clearfix() {
  &:after {
    display: block;
    content: "";
    clear: both;
  }
}

@mixin background-before-opacity($color, $opacity: 0.6) {
  &:before {
    content: "";
    background: ($color);
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    opacity: $opacity;
  }
}

@mixin background($imgpath, $position: center, $repeat: no-repeat, $size: cover) {
  background: {
    image: url($imgpath);
    position: $position;
    repeat: $repeat;
    size: $size;
  }
}
